name: Tests
on:
  pull_request_target:
    types: [opened, synchronize]
  push:
    branches:
      - main

jobs:
  # Note: The `pull_request_target` event provides access to repository secrets!
  #
  # This is required to run the integration tests on PRs from forked branches.
  # Any job checking out pull_request.head.sha should require the access_check.
  #
  # Actions require collaborator approval to start and might require a re-run.
  # The proposed changes should be reviewed before approving any workflow jobs.
  #
  # Reference: https://michaelheap.com/access-secrets-from-forks/
  access_check:
    runs-on: ubuntu-latest
    steps:
    - name: Check user permissions
      if: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.author_association != 'MEMBER' }}
      run: |
        echo "Action was not triggered by an organization member. Exiting now."
        exit 1

  unit_tests:
    runs-on: ubuntu-latest
    needs: access_check
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - run: npm ci && npm run build
    - run: npm test

  integration_test_botToken:
    runs-on: ubuntu-latest
    needs: access_check
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - run: npm ci && npm run build
    - name: Post message to Slack via botToken
      id: slackToken
      uses: ./
      with:
        channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
        slack-message: 'CI Post from slack-send GitHub Action! Succeeded!!'
        # payload: "{\"key\":\"value\",\"foo\":\"bar\"}"
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

    # Use the output from the `slackToken` step
    - name: Check Action output is not empty
      run: test -n "${{ steps.slackToken.outputs.time }}"

    - name: Post Threaded Response
      id: slackThreadResponse
      uses: ./
      with:
        channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
        payload: |
            {
              "text": "This message should be posted as a response in thread",
              "thread_ts": "${{ steps.slackToken.outputs.thread_ts }}"
            }
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

    # Use the output from the `slackIncoming` step
    - name: Check Action output is not empty
      run: test -n "${{ steps.slackPayloadFile.outputs.time }}"
